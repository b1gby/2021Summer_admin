
<style>

</style>

<template>

<form @submit="formSubmit">

<view class="flex bg-white align-center">
    <view class="padding flex-sub text-left" @tap="onClickEditTeacher">
        <view wx:if="{{!isClickEdit}}">编辑</view>
        <button class="cu-btn bg-green shadow" wx:else>取消</button>
    </view>
    <view class="padding flex-sub text-center text-black text-lg text-bold">
        {{!isClickEdit?'教师信息':'编辑教师'}}
    </view>
    <view class="padding flex flex-sub justify-end">
        <button class="cu-btn bg-green shadow" wx:if="{{isClickEdit}}" form-type="submit">完成</button>
    </view>
</view>


	<view class="cu-form-group margin-top">
		<view class="title">昵称</view>
		<view wx:if="{{!isClickEdit}}">{{copyTeacher.Tnickname}}</view>
		<input wx:else name="Tnickname" value="{{copyTeacher.Tnickname}}" disabled="{{!isClickEdit}}"></input>
	</view>

    <view class="cu-bar bg-white" style="border-top:1rpx solid #eee;">
		<view class="action">
			头像
		</view>
		<view class="action">
			{{copyImgList.length}}/1
		</view>
	</view>

    <view class="cu-form-group">
        <view class="grid col-4 grid-square flex-sub">
            <view class="bg-img" wx:for="{{isClickEdit?imgList:copyImgList}}" wx:key="{{index}}" bindtap="ViewImage" data-url="{{isClickEdit?imgList[index]:copyImgList[index]}}">
                <image src='{{item}}' mode='aspectFill'></image>
                <view class="cu-tag bg-red" catchtap="DelImg" data-index="{{index}}" wx:if="{{isClickEdit}}">
                    <text class="cuIcon-close"></text>
                </view>
            </view>
            <view class="solids" bindtap="ChooseImage" wx:if="{{imgList.length<1 && isClickEdit}}">
                <text class="cuIcon-cameraadd"></text>
            </view>
        </view>
	</view>

    <view class="cu-form-group">
		<view class="title">手机号码</view>
		<view wx:if="{{!isClickEdit}}">{{copyTeacher.Tphone}}</view>
		<input wx:else name="Tphone" type="number" value="{{copyTeacher.Tphone}}"  disabled="{{!isClickEdit}}"></input>
	</view>


    <view class="cu-bar bg-white" style="border-top:1rpx solid #eee;">
		<view class="action">
			校区管理
		</view>
        <view class="action" wx:if="{{isClickEdit}}">
			请选择老师管理的校区
		</view>
    </view>
    <view class="cu-form-group">
        <view wx:if="{{!isClickEdit}}" class="flex">
            <view wx:for="{{teacher.Cnames}}" wx:key="cindex" wx:for-item="cname" class="margin">
                {{cname}}
            </view>

            <view wx:if="{{teacher.Cnames.length == 0}}"> 
                暂无管理校区
            </view>
        </view>
        
		<view wx:else>
            <checkbox-group bindchange="checkboxChange">
                <label class="flex" wx:for="{{campusCheckList}}" wx:key="{{item.value}}">
                    <view class="">
                        <checkbox value="{{item.value}}" checked="{{item.checked}}"/>
                    </view>
                    <view class="">{{item.name}}</view>
                </label>
            </checkbox-group>
        </view>
	</view>

    <view class="padding">
        <view class="flex p-xs mb-sm">
            <view class="padding flex-sub flex justify-center">
                <button class="cu-btn bg-red round shadow lg" @tap="onClickDeleteTeacher">注销教师账号</button>
            </view>
        </view>
    </view>
</form>
</template>

<script>
import wepy from 'wepy'
export default class Teacher extends wepy.page{
    data={
        Tid: null,
        teacher: {},
        imgList: [],
        campusCheckList: [],
        isClickEdit: false,
        imgUrl:wepy.$instance.globalData.serverUrl + '/app/file/get_image?name=',
        copyTeacher: {},
        copyImgList: [],
    }

    methods= {
        onClickEditTeacher() {
            let self = this
            self.isClickEdit = self.isClickEdit?false:true
        },

        checkboxChange(e) {
            let self = this

            let values = e.detail.value
            for (let i = 0, lenI = self.campusCheckList.length; i < lenI; ++i) {
                self.campusCheckList[i].checked = false

                for (let j = 0, lenJ = values.length; j < lenJ; ++j) {
                    if (self.campusCheckList[i].value === values[j]) {
                        self.campusCheckList[i].checked = true
                        break
                    }
                }
            }

        },

        ChooseImage(e) {
            let self = this
            let file = e.currentTarget.dataset.file
            wx.chooseImage({
                count: 1, //默认9
                sizeType: ['original', 'compressed'], //可以指定是原图还是压缩图，默认二者都有
                sourceType: ['album', 'camera'],
                success: (res) => {
                    self.imgList= res.tempFilePaths
                    self.$apply()
                }
            });
        },

        ViewImage(e) {
            let self = this
            let file = e.currentTarget.dataset.file
            wx.previewImage({
                urls: self.imgList,
                current: e.currentTarget.dataset.url
            });
        },

        DelImg(e) {
            let self = this
            let file = e.currentTarget.dataset.file
            wx.showModal({
                title: '删除题目图片',
                content: '确定要删除这张图片吗？',
                cancelText: '取消',
                confirmText: '确定',
                success: res => {
                    if (res.confirm) {
                        self.imgList.splice(e.currentTarget.dataset.index, 1);
                        self.$apply()
                    }
                }
            })
        },

        onClickDeleteTeacher(){
            let self = this
            wx.showModal({
                title: '注销教师账号',
                content: '确定要注销此教师账号吗？',
                cancelText: '取消',
                confirmText: '确定',
                success: res => {
                    if (res.confirm) {
                        wepy.request({
                            url:wepy.$instance.globalData.serverUrl + '/app/admin/delete_teacher/:id' + '?Tid=' + self.Tid.toString(),
                            method:'DELETE',
                            header: wepy.$instance.setHeader(),
                            success: function(res) {
                                console.log(res)
                                if (res.data.Code == 1){
                                    console.log("Delete Teacher Success!")
                                    wepy.showToast({
                                        title: '注销成功', //提示的内容,
                                        icon: 'success', //图标,
                                        duration: 2000, //延迟时间,
                                        mask: true, //显示透明蒙层，防止触摸穿透,
                                        success: function(){
                                            setTimeout(function(){
                                                wepy.navigateBack({
                                                    delta: 1
                                                })
                                            }, 1000)
                                        },
                                    });
                                }
                            }
                        })
                    }
                }
            })
            
        },

        formSubmit(e) {
            let self = this

            let successUp = 0; //成功
            let failUp = 0; //失败
            let count = 0; //第几张
            let length = self.imgList.length; //总数

            let sendFormData = e.detail.value // form 表单数据
            sendFormData['Tid'] = Number(self.Tid)

            if(self.imgList.length == 0){
                sendFormData['Ticon'] = ""
            }else if(self.imgList[0].indexOf(self.imgUrl) != -1){
                sendFormData['Ticon'] = self.imgList[0].replace(self.imgUrl,"")
            }else{
                let lastindex = self.imgList[0].lastIndexOf("/")
                sendFormData['Ticon'] = "user_avatar/" + self.imgList[0].substring(lastindex + 1, self.imgList[0].length)
            }
            
            sendFormData['Cnames'] = []
            for(let i = 0; i < self.campusCheckList.length; i++){
                if(self.campusCheckList[i].checked){
                    sendFormData['Cnames'].push(self.campusCheckList[i].value)
                }
            }
            console.log(sendFormData)
            wepy.request({
                url:wepy.$instance.globalData.serverUrl + '/app/admin/update_teacher',
                method:'POST',
                data: sendFormData,
                header: wepy.$instance.setHeader(),
                success: function(res) {
                    console.log(res)
                    if (res.data.Code == 1){
                        wx.showToast({
                              title: '修改成功', //提示的内容,
                              icon: 'success', //图标,
                              mask: true, //显示透明蒙层，防止触摸穿透,
                              success: res => {}
                            });

                        //添加头像
                        if(length>0 && self.imgList[0].indexOf(self.imgUrl) == -1){
                            self.recursionImgUpload(self,self.imgList, successUp, failUp, count, length)
                        }else{
                            self.getTeacherData()
                        }
                        
                        self.isClickEdit = false
                        self.$apply()
                    } 
                }
            })
            
        },

        
    }


    // 递归方式上传多张图片
    recursionImgUpload(self,imgPaths, successUp, failUp, count, length){
        wepy.uploadFile({
            url: wepy.$instance.globalData.serverUrl + '/app/file/upload_file', //开发者服务器 url
            header: wepy.$instance.setHeader(),
            filePath: imgPaths[count], //要上传文件资源的路径
            name: 'uploadFile', //文件对应的 key , 开发者在服务器端通过这个 key 可以获取到文件二进制内容
            formData:{
                dirName:"images/user_avatar"
            },
            header: {
                'content-type': 'multipart/form-data'
            },
            success(e){
                if (e.data.Code==1){
                    console.log("上传成功第" + count + "张")
                }
                successUp++;//成功+1
            },
            fail(e){
                failUp++;//失败+1
            },
            complete(e){
                
                count++;
                if(count == length) {
                    console.log("上传成功")
                    self.getTeacherData()
                }else{
                    self.recursionImgUpload(self,imgPaths,successUp, failUp, count, length)
                }
            }
        });
        
    }

    getTeacherData() {
        let self = this
        wepy.request({
            url:wepy.$instance.globalData.serverUrl + '/app/admin/get_teacher',
            method:'GET',
            header: wepy.$instance.setHeader(),
            data:{
                Tid:self.Tid
            },
            success: function(res) {
                console.log(res)
                if (res.data.Code == 1){
                    self.teacher = res.data.Data
                    self.copyTeacher = JSON.parse(JSON.stringify(self.teacher)) //深拷贝

                    self.imgList = []
                    self.imgList.push(self.imgUrl + res.data.Data.Ticon)
                    self.copyImgList = JSON.parse(JSON.stringify(self.imgList)) //深拷贝
                    self.$apply()

                    self.getCampusData()
                }
            }
        })
    }

    getCampusData() {
        let self = this
        
        wepy.request({
                url:wepy.$instance.globalData.serverUrl + '/app/admin/get_campus_list',
                method:'GET',
                header: wepy.$instance.setHeader(),
                
                success: function(res) {
                    console.log(res)
                    if (res.data.Code == 1){
                        self.campusCheckList = []
                        for (let i=0;i<res.data.Data.length;i++){
                            self.campusCheckList.push({
                                value: res.data.Data[i].Cid.toString(),
                                name: res.data.Data[i].Cname,
                                checked: self.teacher.Cnames.includes(res.data.Data[i].Cname),
                            })
                        }


                       
                        self.$apply()
                    }
                }
            })
    }

    onLoad(options) {
        let self = this

        self.Tid = options.tid

        self.getTeacherData()
        
    }

}
</script>
