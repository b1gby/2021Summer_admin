<style>

</style>

<template>
    <form @submit='formSubmit'>

        <view class='flex bg-white align-center'>
            <view class='padding flex-sub text-left' @tap='onClickEditStudent'>
                <view wx:if='{{!isClickEdit}}'>编辑</view>
                <button class='cu-btn bg-green shadow' wx:else>取消</button>
            </view>
            <view class='padding flex-sub text-center text-black text-lg text-bold'>
                {{ !isClickEdit ? '学生信息' : '编辑学生' }}
            </view>
            <view class='padding flex flex-sub justify-end'>
                <button class='cu-btn bg-green shadow' form-type='submit' wx:if='{{isClickEdit}}'>完成</button>
            </view>
        </view>


        <view class='cu-form-group margin-top'>
            <view class='title'>昵称</view>
            <view wx:if='{{!isClickEdit}}'>{{ copyStudent.Snickname }}</view>
            <input disabled='{{!isClickEdit}}' name='Snickname' value='{{copyStudent.Snickname}}' wx:else></input>
        </view>

        <view class='cu-form-group'>
            <view class='title'>用户名</view>
            <view>{{ copyStudent.Sname }}</view>
        </view>

        <view class='cu-bar bg-white' style='border-top:1rpx solid #eee;'>
            <view class='action'>
                头像
            </view>
            <view class='action'>
                {{ copyImgList.length }}/1
            </view>
        </view>

        <view class='cu-form-group'>
            <view class='grid col-4 grid-square flex-sub'>
                <view bindtap='ViewImage' class='bg-img' data-url='{{isClickEdit?imgList[index]:copyImgList[index]}}'
                      wx:for='{{isClickEdit?imgList:copyImgList}}'
                      wx:key='{{index}}'>
                    <image mode='aspectFill' src='{{item}}'></image>
                    <view catchtap='DelImg' class='cu-tag bg-red' data-index='{{index}}' wx:if='{{isClickEdit}}'>
                        <text class='cuIcon-close'></text>
                    </view>
                </view>
                <view bindtap='ChooseImage' class='solids' wx:if='{{imgList.length<1 && isClickEdit}}'>
                    <text class='cuIcon-cameraadd'></text>
                </view>
            </view>
        </view>

        <view class='cu-form-group'>
            <view class='title'>手机号码</view>
            <view wx:if='{{!isClickEdit}}'>{{ copyStudent.Sphone }}</view>
            <input disabled='{{!isClickEdit}}' name='Sphone' type='number' value='{{copyStudent.Sphone}}'
                   wx:else></input>
        </view>

        <view class='cu-form-group'>
            <view class='title'>年级</view>
            <view class='action' wx:if='{{!isClickEdit}}'>
                {{ copyStudent.SgradeName }}
            </view>
            <picker bindchange='pickerGradeChange' name='SgradeName' range='{{gradePicker}}'
                    value='{{gradePicker[gradeIndex]}}'
                    wx:else>
                <view class='picker'>
                    <text class='text-lg'>{{ gradeIndex ? gradePicker[gradeIndex] : student.SgradeName }}</text>
                </view>
            </picker>
        </view>

        <view class='cu-form-group'>
            <view class='title'>校区</view>
            <view class='action' wx:if='{{!isClickEdit}}'>
                {{ copyStudent.Cname }}
            </view>
            <picker bindchange='pickerCampusChange' name='Cid' range='{{campusNameList}}'
                    value='{{campusList[campusIndex].Cid}}'
                    wx:else>
                <view class='picker'>
                    <text class='text-lg'>{{ campusIndex ? campusList[campusIndex].Cname : student.Cname }}</text>
                </view>
            </picker>
        </view>

        <view class='cu-form-group'>
            <view class='title'>账号状态</view>
            <view class='action'>
                {{ !copyStudent.Sdisabled ? "正常" : "禁用" }}
            </view>
        </view>

        <view class='padding'>
            <view class='flex p-xs mb-sm' style="justify-content: space-around">
                <button
                    class='cu-btn bg-blue round shadow lg'
                    @tap='onClickEnableStudent'
                    wx:if="{{copyStudent.Sdisabled}}"
                >启用学生账号</button>
                <button
                    class='cu-btn bg-blue round shadow lg'
                    @tap='onClickDisableStudent'
                    wx:else
                >禁用学生账号</button>
                <button class='cu-btn bg-red round shadow lg' @tap='onClickDeleteStudent'>注销学生账号</button>
            </view>
        </view>
    </form>
</template>

<script>
import wepy from 'wepy';

export default class Student extends wepy.page {
    data = {
        Sid: null,
        student: {},
        imgList: [],
        gradePicker: ['小学', '七年级', '八年级', '九年级', '高一', '高二', '高三', '大学'],
        gradeIndex: null,
        campusList: [],
        campusNameList: [],
        campusIndex: null,
        isClickEdit: false,
        imgUrl: wepy.$instance.globalData.serverUrl + '/app/file/get_image?name=',
        copyStudent: {},
        copyImgList: []
    };

    methods = {
        pickerGradeChange(e) {
            let self = this;
            self.gradeIndex = e.detail.value;
        },

        pickerCampusChange(e) {
            let self = this;
            self.campusIndex = e.detail.value;
        },

        onClickEditStudent() {
            let self = this;
            self.isClickEdit = self.isClickEdit ? false : true;
        },

        checkboxChange(e) {
            let self = this;

            let values = e.detail.value;
            for (let i = 0, lenI = self.campusCheckList.length; i < lenI; ++i) {
                self.campusCheckList[i].checked = false;

                for (let j = 0, lenJ = values.length; j < lenJ; ++j) {
                    if (self.campusCheckList[i].value === values[j]) {
                        self.campusCheckList[i].checked = true;
                        break;
                    }
                }
            }

        },

        ChooseImage(e) {
            let self = this;
            let file = e.currentTarget.dataset.file;
            wx.chooseImage({
                count: 1, //默认9
                sizeType: ['original', 'compressed'], //可以指定是原图还是压缩图，默认二者都有
                sourceType: ['album', 'camera'],
                success: (res) => {
                    self.imgList = res.tempFilePaths;
                    self.$apply();
                }
            });
        },

        ViewImage(e) {
            let self = this;
            let file = e.currentTarget.dataset.file;
            wx.previewImage({
                urls: self.imgList,
                current: e.currentTarget.dataset.url
            });
        },

        DelImg(e) {
            let self = this;
            let file = e.currentTarget.dataset.file;
            wx.showModal({
                title: '删除题目图片',
                content: '确定要删除这张图片吗？',
                cancelText: '取消',
                confirmText: '确定',
                success: res => {
                    if (res.confirm) {
                        self.imgList.splice(e.currentTarget.dataset.index, 1);
                        self.$apply();
                    }
                }
            });
        },

        /*onClickDisableStudent(){
            let test = wx.showModal({
                title: "禁用学生账号",
                content: "确定要禁用此学生账号？",
                cancelText: '取消',
                confirmText: '确定',
            });
            test.then((res) => {
                if(res.confirm){
                    wepy.$instance.requestPromise({
                        url: wepy.$instance.globalData.serverUrl + '/app/admin/disable_student/' + this.Sid,
                        method: "PUT",
                        header: wepy.$instance.setHeader(),
                    }).then((res) => {
                        console.log(res);
                        if(res.statusCode !== 200){
                            return Promise.reject(res);
                        }
                        wepy.showToast({
                            title: '禁用成功', //提示的内容,
                            icon: 'success', //图标,
                            duration: 2000, //延迟时间,
                            mask: true, //显示透明蒙层，防止触摸穿透,
                        });
                        this.copyStudent.Sdisabled = true;
                        this.$apply();
                    }).catch(() => {
                        wepy.showToast({
                            title: '禁用失败', //提示的内容,
                            icon: 'error', //图标,
                            duration: 2000, //延迟时间,
                            mask: true, //显示透明蒙层，防止触摸穿透,
                        })
                    });
                }
            })
        },*/

        onClickDisableStudent(){
            let confirmConfig = {
                title: "禁用学生账号",
                content: "确定要禁用此学生账号？"
            };
            let requestConfig = {
                url: wepy.$instance.globalData.serverUrl + '/app/admin/disable_student/' + this.Sid,
                method: "PUT",
                header: wepy.$instance.setHeader(),
                successCallback: () => {
                    this.copyStudent.Sdisabled = true;
                    this.$apply();
                }
            };
            let resultConfig = {
                successTitle: "禁用成功",
                failTitle: "禁用失败",
            };
            wepy.$instance.requestWithConfirmAndResult(confirmConfig, requestConfig, resultConfig);
        },

        onClickEnableStudent(){
            let confirmConfig = {
                title: "启用学生账号",
                content: "确定要启用此学生账号？"
            };
            let requestConfig = {
                url: wepy.$instance.globalData.serverUrl + '/app/admin/enable_student/' + this.Sid,
                method: "PUT",
                header: wepy.$instance.setHeader(),
                successCallback: () => {
                    this.copyStudent.Sdisabled = false;
                    this.$apply();
                }
            };
            let resultConfig = {
                successTitle: "启用成功",
                failTitle: "启用失败",
            };
            wepy.$instance.requestWithConfirmAndResult(confirmConfig, requestConfig, resultConfig);
        },

        onClickDeleteStudent() {
            let self = this;
            wx.showModal({
                title: '注销学生账号',
                content: '确定要注销此学生账号？',
                cancelText: '取消',
                confirmText: '确定',
                success: res => {
                    if (res.confirm) {
                        wepy.request({
                            url: wepy.$instance.globalData.serverUrl + '/app/admin/delete_student/:id' + '?Sid=' + self.Sid.toString(),
                            method: 'DELETE',
                            header: wepy.$instance.setHeader(),
                            success: function (res) {
                                console.log(res);
                                if (res.data.Code == 1) {
                                    console.log('Delete Student Success!');
                                    wepy.showToast({
                                        title: '注销成功', //提示的内容,
                                        icon: 'success', //图标,
                                        duration: 2000, //延迟时间,
                                        mask: true, //显示透明蒙层，防止触摸穿透,
                                        success: function () {
                                            setTimeout(function () {
                                                wepy.navigateBack({
                                                    delta: 1
                                                });
                                            }, 1000);
                                        }
                                    });
                                }
                            }
                        });
                    }
                }
            });

        },

        formSubmit(e) {
            let self = this;

            let successUp = 0; //成功
            let failUp = 0; //失败
            let count = 0; //第几张
            let length = self.imgList.length; //总数

            let sendFormData = e.detail.value; // form 表单数据
            sendFormData['Sid'] = Number(self.Sid);

            if (self.imgList.length == 0) {
                sendFormData['Sicon'] = '';
            } else if (self.imgList[0].indexOf(self.imgUrl) != -1) {
                sendFormData['Sicon'] = self.imgList[0].replace(self.imgUrl, '');
            } else {
                let lastindex = self.imgList[0].lastIndexOf('/');
                sendFormData['Sicon'] = 'user_avatar/' + self.imgList[0].substring(lastindex + 1, self.imgList[0].length);
            }

            console.log(sendFormData);
            wepy.request({
                url: wepy.$instance.globalData.serverUrl + '/app/admin/update_student',
                method: 'POST',
                data: sendFormData,
                header: wepy.$instance.setHeader(),
                success: function (res) {
                    console.log(res);
                    if (res.data.Code == 1) {
                        wx.showToast({
                            title: '修改成功', //提示的内容,
                            icon: 'success', //图标,
                            mask: true, //显示透明蒙层，防止触摸穿透,
                            success: res => {
                            }
                        });

                        //添加头像
                        if (length > 0 && self.imgList[0].indexOf(self.imgUrl) == -1) {
                            self.recursionImgUpload(self, self.imgList, successUp, failUp, count, length);
                        } else {
                            self.getStudentData();
                        }

                        self.isClickEdit = false;
                        self.$apply();
                    }
                }
            });

        }


    };


    // 递归方式上传多张图片
    recursionImgUpload(self, imgPaths, successUp, failUp, count, length) {
        wepy.uploadFile({
            url: wepy.$instance.globalData.serverUrl + '/app/file/upload_file', //开发者服务器 url
            header: wepy.$instance.setHeader(),
            filePath: imgPaths[count], //要上传文件资源的路径
            name: 'uploadFile', //文件对应的 key , 开发者在服务器端通过这个 key 可以获取到文件二进制内容
            formData: {
                dirName: 'images/user_avatar'
            },
            header: {
                'content-type': 'multipart/form-data'
            },
            success(e) {
                if (e.data.Code == 1) {
                    console.log('上传成功第' + count + '张');
                }
                successUp++;//成功+1
            },
            fail(e) {
                failUp++;//失败+1
            },
            complete(e) {

                count++;
                if (count == length) {
                    console.log('上传成功');
                    self.getStudentData();
                } else {
                    self.recursionImgUpload(self, imgPaths, successUp, failUp, count, length);
                }
            }
        });

    }

    getStudentData() {
        let self = this;
        wepy.request({
            url: wepy.$instance.globalData.serverUrl + '/app/admin/get_student',
            method: 'GET',
            header: wepy.$instance.setHeader(),
            data: {
                Sid: self.Sid
            },
            success: function (res) {
                console.log(res);
                if (res.data.Code == 1) {
                    self.student = res.data.Data;
                    self.copyStudent = JSON.parse(JSON.stringify(self.student)); //深拷贝

                    self.imgList = [];
                    self.imgList.push(self.imgUrl + res.data.Data.Sicon);
                    self.copyImgList = JSON.parse(JSON.stringify(self.imgList)); //深拷贝

                    self.$apply();

                    self.getCampusData();
                    for (let i = 0; i < self.gradePicker.length; i++) {
                        if (self.gradePicker[i] == res.data.Data.SgradeName) {
                            self.gradeIndex = i;
                        }
                    }

                }
            }
        });
    }

    getCampusData() {
        let self = this;

        wepy.request({
            url: wepy.$instance.globalData.serverUrl + '/app/admin/get_campus_list',
            method: 'GET',
            header: wepy.$instance.setHeader(),

            success: function (res) {
                console.log(res);
                if (res.data.Code == 1) {
                    self.campusList = res.data.Data;
                    self.campusNameList = [];
                    for (let i = 0; i < res.data.Data.length; i++) {
                        if (res.data.Data[i].Cname == self.student.Cname) {
                            self.campusIndex = i;
                        }
                        self.campusNameList.push(res.data.Data[i].Cname);
                    }
                    self.$apply();
                }
            }
        });
    }

    onLoad(options) {
        let self = this;

        self.Sid = options.sid;

        self.getStudentData();

    }

}
</script>
