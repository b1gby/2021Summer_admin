
<style>

</style>

<template>
<form @submit="formSubmit">
	<view class="cu-form-group margin-top">
		<view class="title">用户名</view>
		<input name="Sname" placeholder="请输入登录账号"></input>
	</view>

	<view class="cu-form-group">
		<view class="title">昵称</view>
		<input name="Snickname" placeholder="请输入昵称(可使用姓名)"></input>
	</view>

    <view class="cu-form-group">
		<view class="title">密码</view>
		<input name="Spassword" password placeholder="请输入密码"></input>
	</view>

    <view class="cu-form-group">
		<view class="title">确认密码</view>
		<input name="SpasswordAgain" password placeholder="请再次输入密码"></input>
	</view>

    <view class="cu-form-group">
		<view class="title">手机号码</view>
		<input name="Sphone" type="number" placeholder="请输入手机号"></input>
        <button class="cu-btn bg-green shadow">获取验证码</button>
	</view>

    <view class="cu-form-group">
		<view class="title">验证码</view>
		<input name="Scode" placeholder="请输入验证码"></input>
	</view>

    <view class="cu-bar bg-white" style="border-top:1rpx solid #eee;">
		<view class="action">
			头像
		</view>
		<view class="action">
			{{imgList.length}}/1
		</view>
	</view>

    <view class="cu-form-group">
        <view class="grid col-4 grid-square flex-sub">
            <view class="bg-img" wx:for="{{imgList}}" wx:key="{{index}}" bindtap="ViewImage" data-url="{{imgList[index]}}">
                <image src='{{imgList[index]}}' mode='aspectFill'></image>
                <view class="cu-tag bg-red" catchtap="DelImg" data-index="{{index}}">
                    <text class="cuIcon-close"></text>
                </view>
            </view>
            <view class="solids" bindtap="ChooseImage" wx:if="{{imgList.length<1}}">
                <text class="cuIcon-cameraadd"></text>
            </view>
        </view>
	</view>

    <view class="cu-form-group">
		<view class="title">年级</view>
        <picker bindchange="pickerGradeChange" name="SgradeName" value="{{gradePicker[gradeIndex]}}" range="{{gradePicker}}">
			<view class="picker">
				<text class="text-lg">{{gradeIndex?gradePicker[gradeIndex]:'请选择年级'}}</text>
			</view>
		</picker>
	</view>

    <view class="cu-form-group">
		<view class="title">校区</view>
        <picker bindchange="pickerCampusChange" name="Cid" value="{{campusList[campusIndex].Cid}}" range="{{campusNameList}}">
			<view class="picker">
				<text class="text-lg">{{campusIndex?campusList[campusIndex].Cname:'请选择校区'}}</text>
			</view>
		</picker>
	</view>

    <view class="padding flex justify-center bg-white">
        <button class="cu-btn bg-green shadow lg" form-type="submit">添加学生</button>
    </view>
</form>
</template>

<script>
import wepy from 'wepy'
export default class Student extends wepy.page{
    data={
        imgList: [],
        gradePicker:['七年级','八年级','九年级','高一','高二','高三'],
        gradeIndex:null,
        campusList:[],
        campusNameList:[],
        campusIndex:null,
        nameUploadPath:"",
        answerUploadPath:"",
        audioUploadPath:"",
        recordingTimeqwe:0,//录音计时
        setInter:"",//录音名称
        duration:"",
    }

    methods= {
        pickerGradeChange(e){
            let self = this
            self.gradeIndex = e.detail.value
        },

        pickerCampusChange(e){
            let self = this
            self.campusIndex = e.detail.value
        },

        ChooseImage(e) {
            let self = this
            let file = e.currentTarget.dataset.file
            wx.chooseImage({
                count: 1, //默认9
                sizeType: ['original', 'compressed'], //可以指定是原图还是压缩图，默认二者都有
                sourceType: ['album', 'camera'],
                success: (res) => {
                    self.imgList= res.tempFilePaths
                    self.$apply()
                }
            });
        },

        ViewImage(e) {
            let self = this
            let file = e.currentTarget.dataset.file
            wx.previewImage({
                urls: self.imgList,
                current: e.currentTarget.dataset.url
            });
        },

        DelImg(e) {
            let self = this
            let file = e.currentTarget.dataset.file
            wx.showModal({
                title: '删除题目图片',
                content: '确定要删除这张图片吗？',
                cancelText: '取消',
                confirmText: '确定',
                success: res => {
                    if (res.confirm) {
                        self.imgList.splice(e.currentTarget.dataset.index, 1);
                        self.$apply()
                    }
                }
            })
        },

        formSubmit(e) {
            let self = this

            let successUp = 0; //成功
            let failUp = 0; //失败
            let count = 0; //第几张
            let length = self.imgList.length; //总数

            let sendFormData = e.detail.value // form 表单数据

            sendFormData['Sicon'] = self.imgList.length == 0? "" : "user_avatar/" + self.imgList[0].replace("http://tmp/","")
            console.log(sendFormData)
            wepy.request({
                url:wepy.$instance.globalData.serverUrl + '/app/admin/insert_student',
                method:'POST',
                data: sendFormData,
                header: wepy.$instance.setHeader(),
                success: function(res) {
                    console.log(res)
                    if (res.data.Code == 1){
                        wx.showToast({
                              title: '添加成功', //提示的内容,
                              icon: 'success', //图标,
                              mask: true, //显示透明蒙层，防止触摸穿透,
                              success: res => {}
                            });

                        //添加头像
                        if(length>0){
                            self.recursionImgUpload(self,self.imgList, successUp, failUp, count, length)
                        }
                        
                        
                    } else if(res.data.Code == 2){
                        if(res.data.Msg == "Password not consistent!"){
                            wx.showToast({
                              title: '两次密码不一致', //提示的内容,
                              icon: 'error', //图标,
                              mask: true, //显示透明蒙层，防止触摸穿透,
                              success: res => {}
                            });
                        } else if(res.data.Msg == "Username existed!"){
                            wx.showToast({
                              title: '用户名已存在', //提示的内容,
                              icon: 'error', //图标,
                              mask: true, //显示透明蒙层，防止触摸穿透,
                              success: res => {}
                            });
                        }
                    }
                }
            })
            
        },

        
    }

    getCampusData() {
        let self = this
        
        wepy.request({
                url:wepy.$instance.globalData.serverUrl + '/app/admin/get_campus_list',
                method:'GET',
                header: wepy.$instance.setHeader(),
                
                success: function(res) {
                    console.log(res)
                    if (res.data.Code == 1){
                        self.campusList = res.data.Data
                        for (let i = 0;i<res.data.Data.length;i++){
                            self.campusNameList.push(res.data.Data[i].Cname)
                        }
                        self.$apply()
                    }
                }
            })
    }

    // 递归方式上传多张图片
    recursionImgUpload(self,imgPaths, successUp, failUp, count, length){
        wepy.uploadFile({
            url: wepy.$instance.globalData.serverUrl + '/app/file/upload_file', //开发者服务器 url
            header: wepy.$instance.setHeader(),
            filePath: imgPaths[count], //要上传文件资源的路径
            name: 'uploadFile', //文件对应的 key , 开发者在服务器端通过这个 key 可以获取到文件二进制内容
            formData:{
                dirName:"images/user_avatar"
            },
            header: {
                'content-type': 'multipart/form-data'
            },
            success(e){
                if (e.data.Code==1){
                    console.log("上传成功第" + count + "张")
                }
                successUp++;//成功+1
            },
            fail(e){
                failUp++;//失败+1
            },
            complete(e){
                
                count++;
                if(count == length) {
                    console.log("上传成功")
                }else{
                    self.recursionImgUpload(self,imgPaths,successUp, failUp, count, length)
                }
            }
        });
        
    }

    onLoad() {
        let self = this
        self.getCampusData()
    }

}
</script>
